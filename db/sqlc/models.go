// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type TransactionTypeEnum string

const (
	TransactionTypeEnumDeposit  TransactionTypeEnum = "deposit"
	TransactionTypeEnumWithdraw TransactionTypeEnum = "withdraw"
)

func (e *TransactionTypeEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TransactionTypeEnum(s)
	case string:
		*e = TransactionTypeEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for TransactionTypeEnum: %T", src)
	}
	return nil
}

type NullTransactionTypeEnum struct {
	TransactionTypeEnum TransactionTypeEnum `json:"transaction_type_enum"`
	Valid               bool                `json:"valid"` // Valid is true if TransactionTypeEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTransactionTypeEnum) Scan(value interface{}) error {
	if value == nil {
		ns.TransactionTypeEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TransactionTypeEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTransactionTypeEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TransactionTypeEnum), nil
}

type Accounts struct {
	ID            int32        `json:"id"`
	UserID        int64        `json:"user_id"`
	AccountNumber string       `json:"account_number"`
	Balance       string       `json:"balance"`
	Currency      string       `json:"currency"`
	CreatedAt     sql.NullTime `json:"created_at"`
	UpdatedAt     sql.NullTime `json:"updated_at"`
}

type TransactionLogs struct {
	ID            int32          `json:"id"`
	TransactionID sql.NullInt32  `json:"transaction_id"`
	Status        sql.NullString `json:"status"`
	ChangedAt     sql.NullTime   `json:"changed_at"`
	ChangedBy     sql.NullString `json:"changed_by"`
}

type Transactions struct {
	ID              int32                   `json:"id"`
	AccountID       int32                   `json:"account_id"`
	TransactionType NullTransactionTypeEnum `json:"transaction_type"`
	Amount          string                  `json:"amount"`
	Status          sql.NullString          `json:"status"`
	ReferenceID     string                  `json:"reference_id"`
	TargetAccountID sql.NullInt32           `json:"target_account_id"`
	Description     sql.NullString          `json:"description"`
	CreatedAt       sql.NullTime            `json:"created_at"`
	UpdatedAt       sql.NullTime            `json:"updated_at"`
}

type Transfers struct {
	ID            int32         `json:"id"`
	FromAccountID sql.NullInt32 `json:"from_account_id"`
	ToAccountID   sql.NullInt32 `json:"to_account_id"`
	Amount        string        `json:"amount"`
	TransactionID sql.NullInt32 `json:"transaction_id"`
	CreatedAt     sql.NullTime  `json:"created_at"`
}

type Users struct {
	ID        int32        `json:"id"`
	Name      string       `json:"name"`
	Email     string       `json:"email"`
	Password  string       `json:"password"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}
