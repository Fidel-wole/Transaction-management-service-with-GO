// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: account.sql

package db

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts (user_id, account_number, balance, currency)
VALUES ($1, $2, $3, $4)
RETURNING id, user_id, account_number, balance, currency
`

type CreateAccountParams struct {
	UserID        int64  `json:"user_id"`
	AccountNumber string `json:"account_number"`
	Balance       string `json:"balance"`
	Currency      string `json:"currency"`
}

type CreateAccountRow struct {
	ID            int32  `json:"id"`
	UserID        int64  `json:"user_id"`
	AccountNumber string `json:"account_number"`
	Balance       string `json:"balance"`
	Currency      string `json:"currency"`
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (CreateAccountRow, error) {
	row := q.db.QueryRowContext(ctx, createAccount,
		arg.UserID,
		arg.AccountNumber,
		arg.Balance,
		arg.Currency,
	)
	var i CreateAccountRow
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.AccountNumber,
		&i.Balance,
		&i.Currency,
	)
	return i, err
}
